# This file is for setting up the backend with prisma that generates the prisma.graphql file
# EVERY TIME YOU MAKE CHANGES TO THE DATAMODEL=> REDEPLOY ON PRISMA FOR UPDATES TO TAKE HOLD

enum Permission {
  ADMIN
  USER
  IMAGECREATE
  IMAGEDELETE
  FAVORITECREATE
  FAVORITEDELETE
  RECAREACREATE
  RECAREAUPDATE
  RECAREADELETE
  REVIEWCREATE
  REVIEWUPDATE
  REVIEWDELETE
}

type Activity {
  id: ID! @unique
  name: String!
  recAreas: RecArea! @relation(name: "RecAreaActivities")
  # activitytypes: [Activitytype!]!
}

type Favorite {
  id: ID! @unique
  user: User! @relation(name: "UserFavorites")
  recArea: RecArea! @relation(name: "RecAreaFavoriters")
}

type Image {
  id: ID! @unique
  user: User! @relation(name: "UserImages")
  recArea: RecArea @relation(name: "RecAreaImages")
  review: Review @relation(name: "ReviewImages")
  image: String!
  largeImage: String
}

type User {
  id: ID! @unique
  avatar: String
  facebookId: String @unique
  googleId: String @unique
  twitterId: String @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String! @unique
  emailValidated: Boolean! @default(value: false)
  validateEmailToken: String! @unique
  favorites: [Favorite!]! @relation(name: "UserFavorites", onDelete: CASCADE)
  images: [Image!]! @relation(name: "UserImages", onDelete: CASCADE)
  name: String!
  password: String!
  permissions: [Permission]
  resetToken: String! @unique
  resetTokenExpiry: Float
  reviews: [Review!]! @relation(name: "UserReviews", onDelete: CASCADE)
}

type RecArea {
  id: ID! @unique
  activities: [Activity!]!
    @relation(name: "RecAreaActivities", onDelete: CASCADE)
  description: String!
  directions: String
  favorites: [Favorite!]!
    @relation(name: "RecAreaFavoriters", onDelete: CASCADE)
  images: [Image!]! @relation(name: "RecAreaImages", onDelete: CASCADE)
  lat: Float!
  long: Float!
  mapUrl: String
  name: String!
  reviews: [Review!]! @relation(name: "RecAreaReviews", onDelete: CASCADE)
}

type Review {
  id: ID! @unique
  content: String
  createdAt: DateTime!
  updatedAt: DateTime!
  user: User! @relation(name: "UserReviews")
  rating: Int!
  recArea: RecArea! @relation(name: "RecAreaReviews")
  images: [Image] @relation(name: "ReviewImages")
}

# TODO: Will probably delete, just using as a reference from RIDB api json response
# type Recareas @pgTable(name: "recareas") {
#   METADATA_RESULTS_CURRENT_COUNT: Int
#   METADATA_RESULTS_TOTAL_COUNT: Int
#   METADATA_SEARCH_PARAMETERS_LIMIT: Int
#   METADATA_SEARCH_PARAMETERS_OFFSET: Int
#   METADATA_SEARCH_PARAMETERS_QUERY: Int
#   METADATA_SEARCH_PARAMETERS_STATE: String
#   RECDATA_ACTIVITY_ActivityID: Int
#   RECDATA_ACTIVITY_ActivityName: String
#   RECDATA_ACTIVITY_RecAreaActivityDescription: String
#   RECDATA_ACTIVITY_RecAreaActivityFeeDescription: Int
#   RECDATA_ACTIVITY_RecAreaID: Int
#   RECDATA_FACILITY_FacilityID: Int
#   RECDATA_FACILITY_FacilityName: String
#   RECDATA_FACILITY_ResourceLink: String
#   RECDATA_GEOJSON_COORDINATES: Float
#   RECDATA_GEOJSON_TYPE: String
#   RECDATA_Keywords: String
#   RECDATA_LINK_Description: String
#   RECDATA_LINK_EntityID: Int
#   RECDATA_LINK_EntityLinkID: Int
#   RECDATA_LINK_EntityType: String
#   RECDATA_LINK_LinkType: String
#   RECDATA_LINK_Title: String
#   RECDATA_LINK_URL: String
#   RECDATA_LastUpdatedDate: DateTime
#   RECDATA_MEDIA_Credits: String
#   RECDATA_MEDIA_Description: String
#   RECDATA_MEDIA_EmbedCode: Int
#   RECDATA_MEDIA_EntityID: Int
#   RECDATA_MEDIA_EntityMediaID: Int
#   RECDATA_MEDIA_EntityType: String
#   RECDATA_MEDIA_Height: Int
#   RECDATA_MEDIA_MediaType: String
#   RECDATA_MEDIA_Subtitle: String
#   RECDATA_MEDIA_Title: String
#   RECDATA_MEDIA_URL: String
#   RECDATA_MEDIA_Width: Int
#   RECDATA_ORGANIZATION_LastUpdatedDate: String
#   RECDATA_ORGANIZATION_OrgAbbrevName: String
#   RECDATA_ORGANIZATION_OrgID: Int
#   RECDATA_ORGANIZATION_OrgImageURL: String
#   RECDATA_ORGANIZATION_OrgJurisdictionType: String
#   RECDATA_ORGANIZATION_OrgName: String
#   RECDATA_ORGANIZATION_OrgParentID: Int
#   RECDATA_ORGANIZATION_OrgType: String
#   RECDATA_ORGANIZATION_OrgURLAddress: String
#   RECDATA_ORGANIZATION_OrgURLText: String
#   RECDATA_OrgRecAreaID: String
#   RECDATA_RECAREAADDRESS_AddressCountryCode: String
#   RECDATA_RECAREAADDRESS_AddressStateCode: String
#   RECDATA_RECAREAADDRESS_City: String
#   RECDATA_RECAREAADDRESS_LastUpdatedDate: DateTime
#   RECDATA_RECAREAADDRESS_PostalCode: String
#   RECDATA_RECAREAADDRESS_RecAreaAddressID: Int
#   RECDATA_RECAREAADDRESS_RecAreaAddressType: String
#   RECDATA_RECAREAADDRESS_RecAreaID: Int
#   RECDATA_RECAREAADDRESS_RecAreaStreetAddress1: String
#   RECDATA_RECAREAADDRESS_RecAreaStreetAddress2: String
#   RECDATA_RECAREAADDRESS_RecAreaStreetAddress3: String
#   RECDATA_RecAreaDescription: String
#   RECDATA_RecAreaDirections: String
#   RECDATA_RecAreaEmail: String
#   RECDATA_RecAreaFeeDescription: Int
#   RECDATA_RecAreaID: Int
#   RECDATA_RecAreaLatitude: Float
#   RECDATA_RecAreaLongitude: Float
#   RECDATA_RecAreaMapURL: String
#   RECDATA_RecAreaName: String
#   RECDATA_RecAreaPhone: String
#   RECDATA_RecAreaReservationURL: String
#   RECDATA_StayLimit: Int
# }
